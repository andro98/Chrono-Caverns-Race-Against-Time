##Server properties
server.port=9004
#spring.application.name=/payment

jasypt.encryptor.bean=encryptorBean

#Datasource properties
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://10.29.3.51:3306/aman_collection_prosecutors?useUnicode=yes&characterEncoding=UTF-8&characterSetResults=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true
spring.datasource.username=ENC(ACojeUMTa7poG48GI+uIBY34tdD3x7Qn)
spring.datasource.password=ENC(3QEFObQBwFlcWgkdbsBZPKyAKLWC3vEb)
spring.datasource.validationQuery=SELECT 1
#spring.datasource.initialize=true
#spring.datasource.schema=classpath:schema.sql
#spring.datasource.data=classpath:data.sql
spring.datasource.initialization-mode=always

#spring.datasource.tomcat.max-wait=20000
#spring.datasource.tomcat.max-active=50
#spring.datasource.tomcat.max-idle=20
#spring.datasource.tomcat.min-idle=15

#JPA properties. Using ddl-auto = create will drop schema every-time.
#Choose the correct property based on development / production role. //validate
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.jdbc.batch_size=1000

# Hikari configuration
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimumIdle=20
spring.datasource.hikari.maximumPoolSize=100
spring.datasource.hikari.idleTimeout=300000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=200000
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.registerMbeans=true

#logging.level.org.hibernate.SQL=DEBUG

#JWT properties
app.jwt.header=ENC(UTsBIYT0gwNw26YVyY1jTI59mTaG48EM)
app.jwt.header.prefix=ENC(z0fDMF5w68TipFpVx8P8oQ==) 
app.jwt.secret=ENC(Z4X+eDFlhhKob0BP1DY4IJjO3/3pj8/O9paZ5BVXHHG18qACUWTbrIeUSzH4SSiL)
app.jwt.expiration=ENC(zB4tWEWbETOqlwfpCY95+g==)

#Jackson properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
spring.jackson.time-zone=UTC
#Token properties
app.token.email.verification.duration=3600000
app.token.password.reset.duration=3600000
app.token.refresh.duration=2592000000
app.velocity.templates.location=/templates/
#Logged out token cache
app.cache.logoutToken.maxSize=1000
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2MB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

# Prosecutors directories
attachment.deposit.bank=/opt/prosecutors/maazoun/attachment/Deposits/Bank
attachment.deposit.visa=/opt/prosecutors/maazoun/prosecutors/maazoun/attachment/Deposits/Visa
attachment.deficit=/opt/prosecutors/maazoun/attachment/Deficit
attachment.refund=/opt/prosecutors/maazoun/attachment/Refund
attachment.modified=/opt/prosecutors/maazoun/attachment/modified

#maazouniaChurch
attachment.maazoun.maazouniaChurch=/opt/prosecutors/maazoun/attachment/maazouniaChurch
#supplyOrdersDetails
attachment.maazoun.supplyOrdersDetails=/opt/prosecutors/maazoun/attachment/supplyOrdersDetails
# Maazouns services
attachment.maazounImages.dir=/opt/prosecutors/maazoun/attachment/maazounsPhoto
attachment.maazoun.supply.orders=/opt/prosecutors/maazoun/attachment/supplyOrders
attachment.maazoun.request.orders=/opt/prosecutors/maazoun/attachment/requestOrders
attachment.maazoun.collection=/opt/prosecutors/maazoun/attachment/collectionRequest
attachment.maazoun.contract.status=/opt/prosecutors/maazoun/attachment/contractStatus
attachment.maazoun.delivered=/opt/prosecutors/maazoun/attachment/deliveryRequest

reports.maazoun.supply.orders=/opt/prosecutors/maazoun/reports/supplyOrders
reports.maazoun.request.orders=/opt/prosecutors/maazoun/reports/requestOrders
reports.maazoun.collection=/opt/prosecutors/maazoun/reports/collectionRequest
reports.maazoun.received=/opt/prosecutors/maazoun/reports/receivedRequest
reports.maazoun.delivered=/opt/prosecutors/maazoun/reports/deliveryRequest

net.sf.jasperreports.extension.registry.factory.fonts=net.sf.jasperreports.engine.fonts.SimpleFontExtensionsRegistryFactory
net.sf.jasperreports.extension.simple.font.families.ireportfamily1621184947681=/fonts/fontsfamily1621184947681.xml

#Encryption
encryption.key=ENC(5nJ0vzHNtfiiU62Zw/HO0uwjYZM2PYlohOiJcEvO3qE=)
encryption.iv=ENC(8leiE1fQ86kYq2ucHv5VQSwbUUCQpL5sbq1fWzA+AzA=)

aman.logo=/opt/aman-fintech-logo.png
prosecutor.logo=/opt/prosecutor_logo.png

# additional attributes
attachment.maazoun.quota.exception.dir=/opt/prosecutors/maazoun/attachment/maazounQuotaException
management.endpoints.web.exposure.include=*
management.endpoint.loggers.enabled=true
management.endpoint.health.show-details=always
spring.boot.admin.client.url=http://localhost:8089/admin
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin
spring.application.name=MaazounAdminServer
spring.boot.admin.client.enabled=true
spring.boot.admin.client.auto-registration=true